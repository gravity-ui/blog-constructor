@import '../../../styles/mixins';
@import '../../../styles/variables';

$block: '.#{$namespace}header-block';

#{$block} {
    $root: &;
    $imageRight: $indentXS;
    $headerMaxWidth: 1440px;
    //$imageWidth: 456px;
    $imageWidth: calc(100% / 12 * 4);
    $containerWithPadding: calc($newContentWidth + $indentXXXS * 2 + $gridContainerPadding * 2);
    $blockWidth: var(--block-width);

    &__grid {
        z-index: 10;
    }

    &_image-out-grid {
        #{$root}__image {
            right: $indentXS;
            left: 50%;
            max-width: $headerMaxWidth;
            width: 100%;
            transform: translateX(calc(-50% - $indentXS));

            img {
                margin-left: auto;
                width: $imageWidth;
                border-radius: 16px;
            }
        }

        #{$root}__content-wrapper {
            position: static;
            min-height: 420px;
        }

        .pc-header-block__content-inner {
            padding-right: 0;
        }
    }

    @media (min-width: map-get($gridBreakpoints, 'lg')) {
        &_image-out-grid {
            .pc-header-block__content-inner {
                $textWidth: calc(100% / 12 * 8);
                max-width: $textWidth;
                //max-width: calc(
                //    min($blockWidth, $containerWithPadding) - $gridContainerPadding - $imageWidth -
                //        $imageRight +
                //        (
                //            min(max($blockWidth, $containerWithPadding), $headerMaxWidth) -
                //                $containerWithPadding
                //        ) /
                //        2
                //);
                padding-right: $indentL;
            }
        }
    }

    @media (max-width: map-get($gridBreakpoints, 'lg')) and (min-width: map-get($gridBreakpoints, 'lg')) {
        &_image-out-grid {
            //#{$root}__image {
            //    img {
            //        width: $imageWidth;
            //    }
            //}

            .pc-header-block__content-inner {
                $textWidth: calc(100% / 12 * 8 + $indentL);
                max-width: $textWidth;
                //max-width: calc(
                //    min($blockWidth, $containerWithPadding) - $gridContainerPadding - $imageWidth -
                //        $imageRight +
                //        (
                //            min(max($blockWidth, $containerWithPadding), $headerMaxWidth) -
                //                $containerWithPadding
                //        ) /
                //        2
                //);
                padding-right: $indentL;
            }
        }
    }

    @media (max-width: map-get($gridBreakpoints, 'lg')) and (min-width: map-get($gridBreakpoints, 'md')) {
        //$imageWidth: 32vw;
        $imageWidth: calc(100% / 12 * 6 - 16px);

        &_image-out-grid {
            #{$root}__image {
                img {
                    width: $imageWidth;
                }
            }

            .pc-header-block__content-inner {
                $textWidth: calc(100% / 12 * 6);
                max-width: $textWidth;
                //max-width: calc(
                //    min($blockWidth, $containerWithPadding) - $gridContainerPadding - $imageWidth -
                //        $imageRight +
                //        (
                //            min(max($blockWidth, $containerWithPadding), $headerMaxWidth) -
                //                $containerWithPadding
                //        ) /
                //        2
                //);
                //padding-right: $indentL;
                padding-right: $indentL;
            }
        }
    }

    @media (max-width: map-get($gridBreakpoints, 'md')) {
        &_image-out-grid {
            #{$root}__image {
                display: none;
            }

            #{$root}__content-wrapper {
                max-width: none;
                min-height: auto;
            }
        }
    }
}
